@page "/attendance"
@using AttendanceSystem.Data
@using AttendanceSystem.Models
@using Microsoft.EntityFrameworkCore;
@inject AttendancedbContext DbContext;
@inject AttendanceService AttendanceService
@using Microsoft.AspNetCore.Components.QuickGrid;

<PageTitle>Attendance records</PageTitle>

<h3>Attendance Records</h3>

<table class="table">
    <tbody>
        @if (attendanceRecords != null && attendanceRecords.Any())
        {
            <QuickGrid Items="filteredAttendanceRecords!.AsQueryable()" Virtualize="true" PageSize="10" Class="table table-hover table-striped" style="color: black; text-align: center;">
                <PropertyColumn Property="@(Record => Record.Date.ToShortDateString())" Title="Date" Class="bg-white text-black" Sortable="true" />
                <PropertyColumn Property="@(Record => Record.StudentId)" Title="Student ID" Class="bg-white text-black" Sortable="true" />
                <PropertyColumn Property="@(Record => studentLookup![Record.StudentId])" Class="bg-white text-black" Title="Student Name" Sortable="true" />
                <PropertyColumn Property="@(Record => Record.IsPresent ? "Present" : "Absent")" Class="bg-white text-black" Title="Presence Status" Sortable="true" />
            </QuickGrid>
        }
        else
        {
            <tr>
                <td colspan="4">No attendance records found.</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private Dictionary<int, string>? studentLookup;
    private List<AttendanceRecord>? attendanceRecords;
    private List<AttendanceRecord>? filteredAttendanceRecords;

    protected override void OnInitialized()
    {
        studentLookup = AttendanceService.GetStudents().ToDictionary(s => s.Id, s => s.Name);
        attendanceRecords = AttendanceService.GetAttendanceRecords();
        filteredAttendanceRecords = attendanceRecords?.Where(record => studentLookup.ContainsKey(record.StudentId)).ToList();
    }
}